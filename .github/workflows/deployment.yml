name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'
          # cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Tar build files
        run: tar -czf build.tar.gz dist

      - name: Deploy to remote server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          source: build.tar.gz
          target: /tmp

      - name: Execute remote deployment commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            # Extract the build files to the deployment directory
            tar -xzf /tmp/build.tar.gz -C ~root/cdbmp_maps/frontend/
            rm /tmp/build.tar.gz
            
            # Build and restart the Docker container
            cd ~root/cdbmp_maps
            docker-compose down
            docker-compose up -d --build
