name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'
          # cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: build
    steps:
      - name: Deploy to remote server
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.REMOTE_SSH_KEY }}
          ARGS: '-rltgoDzvO --delete'
          SOURCE: 'deploy_package/'
          TARGET: '/~root/cdbmp-maps/frontend'

      - name: Execute remote deployment commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            # Build and restart the Docker container
            cd ~root/cdbmp_maps
            docker-compose up -d --build frontend
